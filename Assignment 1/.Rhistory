mu <- matrix(c(0, 0, 0))
T <- n * t(sample_mean - mu) %*% solve(S) %*% (sample_mean - mu)
# Obtain the degrees of freedom
n <- dim(pulmonary)[1]
p <- dim(pulmonary)[2]
sample_mean <- matrix(colMeans(pulmonary))
mu <- matrix(c(0, 0, 0))
T <- n * t(sample_mean - mu) %*% solve(cov(pulmonary)) %*% (sample_mean - mu)
# Obtain the degrees of freedom
n <- dim(pulmonary)[1]
p <- dim(pulmonary)[2]
sample_mean <- matrix(colMeans(pulmonary))
mu <- matrix(c(0, 0, 0))
T_2 <- n * t(sample_mean - mu) %*% solve(cov(pulmonary)) %*% (sample_mean - mu)
# Obtain the degrees of freedom
n <- dim(pulmonary)[1]
p <- dim(pulmonary)[2]
sample_mean <- matrix(colMeans(pulmonary))
mu <- matrix(c(0, 0, 0))
(T_2 <- n * t(sample_mean - mu) %*% solve(cov(pulmonary)) %*% (sample_mean - mu))
F_stat <- (n - p)/((n - 1) * p)
F_stat <- (n - p)/((n - 1) * p) * T_2
(F_stat <- (n - p)/((n - 1) * p) * T_2)
?pf
pf(F_stat, p, n - p, lower.tail = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(highcharter)
art <- read.csv("/Users/greysonchung/Desktop/Data-Science-Project/data/cleanData.csv")
library(dplyr)
library(highcharter)
art <- read.csv("/Users/greysonchung/Desktop/Data-Science-Project/data/cleanData.csv")
art
library(dplyr)
library(highcharter)
art <- read.csv("/Users/greysonchung/Downloads/cleanData.numbers")
library(dplyr)
library(highcharter)
art <- read.csv("/Users/greysonchung/Desktop/Data-Science-Project/data/cleanData.csv")
names(art)
column_name <- names(art)
column_name <- names(art)
column_name
column_name <- names(art)
column_name[1]
column_name <- names(art)
column_name[2]
column_name <- names(art)
column_name
painting_support <- art[, grepl("painting_support", names(art))]
painting_support
painting_support %>%
count(painting_support_condition)
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n))
library(dplyr)
library(highcharter)
art <- read.csv("/Users/greysonchung/Desktop/Data-Science-Project/data/cleanData.csv")
painting_support <- art[, grepl("painting_support", names(art))]
painting_support
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n))
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition")) %>%
hc_yAxis(title = list(text = "Number of Paintings"))
?hc_xAxis
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("poor", "fair", "good", "excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings"))
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
?hc_series
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings") %>%
hc_series(name = "Number of Paintings")
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings") %>%
hc_series({name = "Number of Paintings"})
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings") %>%
hc_series(name = "Number of Paintings")
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_series(name = "Number of Paintings") %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
library(dplyr)
library(highcharter)
art <- read.csv("/Users/greysonchung/Desktop/Data-Science-Project/data/cleanData.csv")
art
art %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_series(name = "Number of Paintings") %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
art %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n, groups = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_series(name = "Number of Paintings") %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
painting_support %>%
count(painting_support_condition) %>%
hchart(type = "column", hcaes(x = painting_support_condition, y = n)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_series(name = "Number of Paintings") %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
art %>%
count(painting_support_condition)
#hchart("column", hcaes(x = painting_support_condition, y = n)) %>%
#hc_xAxis(title = list(text = "Painting Support Condition"),
#         categories = c("Poor", "Fair", "Good", "Excellent")) %>%
#hc_yAxis(title = list(text = "Number of Paintings")) %>%
#hc_series(name = "Number of Paintings") %>%
#hc_title(text = "Painting Support Condition Summary for all Paintings")
art %>%
count(painting_support_condition, collection)
#hchart("column", hcaes(x = painting_support_condition, y = n)) %>%
#hc_xAxis(title = list(text = "Painting Support Condition"),
#         categories = c("Poor", "Fair", "Good", "Excellent")) %>%
#hc_yAxis(title = list(text = "Number of Paintings")) %>%
#hc_series(name = "Number of Paintings") %>%
#hc_title(text = "Painting Support Condition Summary for all Paintings")
art %>%
count(painting_support_condition, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_series(name = "Number of Paintings") %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
library(dplyr)
library(viridisLite)
library(highcharter)
art <- read.csv("/Users/greysonchung/Desktop/Data-Science-Project/data/cleanData.csv")
cols <- viridis(4)
art %>%
count(painting_support_condition, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_colors(cols) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
highcharts_demo()
art %>%
count(painting_support_condition, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
art %>%
count(painting_support_condition, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
options(highcharter.theme = hc_theme_flatdark())
art %>%
count(painting_support_condition, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
options(highcharter.theme = hc_theme_538())
art %>%
count(painting_support_condition, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
options(highcharter.theme = hc_theme_google())
art %>%
count(painting_support_condition, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = painting_support_condition, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Painting Support Condition"),
categories = c("Poor", "Fair", "Good", "Excellent")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Condition Summary for all Paintings")
art %>%
count(corner_distortions_painting_support) %>%
hchart("column", stacking = "normal",
hcaes(x = corner_distortions_painting_support, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Corner Distortion")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Corner Distortion")
art %>%
count(corner_distortions_painting_support, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = corner_distortions_painting_support, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Corner Distortion")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Corner Distortion")
art %>%
count(corner_distortions_painting_support, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = corner_distortions_painting_support, y = n, group = collection),
categories = c("No", "Yes")) %>%
hc_xAxis(title = list(text = "Corner Distortion")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Corner Distortion")
art %>%
count(corner_distortions_painting_support, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = corner_distortions_painting_support, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Corner Distortion"),
categories = c("No", "Yes")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Corner Distortion")
art %>%
count(planar_painting_support, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = corner_distortions_painting_support, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Corner Distortion"),
categories = c("No", "Yes")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Corner Distortion")
art %>%
count(planar_painting_support, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = planar_painting_support, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Planar"),
categories = c("No", "Yes")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Corner Distortion")
art %>%
count(planar_painting_support, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = planar_painting_support, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Planar"),
categories = c("No", "Yes")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Planar")
art %>%
group_by(collection)
art %>%
group_by(collection)[0]
art %>%
group_by(planar_painting_support, collection)
art %>%
count(planar_painting_support, collection)
painting_support <- art[, grepl("painting_support", names(art))]
art
art %>%
count(planar_painting_support, collection, title)
shiny::runApp('Desktop/app')
runApp('Desktop/app')
?highchartOutput
runApp('Desktop/app')
runApp('Desktop/app')
content_sing <- paste(sep = "<br/>",
"<b><a href='https://www.museumthailand.com/en/museum/The-National-Gallery-Hor-Silp-Chao-Fa'>National Art Gallery (Thailand)</a></b>",
"Museum Collection: 33"
)
runApp('Desktop/app')
art
art
runApp('Desktop/app')
customTheme <- shinyDashboardThemeDIY(
### general
appFontFamily = "Optima"
,appFontColor = "#2D2D2D"
,primaryFontColor = "#000000"
,infoFontColor = "#000000"
,successFontColor = "#0F0F0F"
,warningFontColor = "#D41A1A"
,dangerFontColor = "#D41A1A"
,bodyBackColor = "#FFFFFF"
### header
,logoBackColor = "#FFFFFF"
,headerButtonBackColor = "#FFFFFF"
,headerButtonIconColor = "#000000"
,headerButtonBackColorHover = "#CAE0E6"
,headerButtonIconColorHover = "#000000"
,headerBackColor = "#FFFFFF"
,headerBoxShadowColor = ""
,headerBoxShadowSize = "0px 0px 0px"
### sidebar
,sidebarBackColor = "#F0F0F0"
,sidebarPadding = "3"
,sidebarMenuBackColor = "transparent"
,sidebarMenuPadding = "2"
,sidebarMenuBorderRadius = 0
,sidebarShadowRadius = ""
,sidebarShadowColor = "0px 0px 0px"
,sidebarUserTextColor = "#737373"
,sidebarSearchBackColor = "#FFFFFF"
,sidebarSearchIconColor = "#000000"
,sidebarSearchBorderColor = "#DCDCDC"
,sidebarTabTextColor = "#737373"
,sidebarTabTextSize = "15"
,sidebarTabBorderStyle = "none"
,sidebarTabBorderColor = "none"
,sidebarTabBorderWidth = "0"
,sidebarTabBackColorSelected = "#D1D1D1"
,sidebarTabTextColorSelected = "#000000"
,sidebarTabRadiusSelected = "0px"
,sidebarTabBackColorHover = "#F5F5F5"
,sidebarTabTextColorHover = "#000000"
,sidebarTabBorderStyleHover = "none solid none none"
,sidebarTabBorderColorHover = "#C8C8C8"
,sidebarTabBorderWidthHover = "4"
,sidebarTabRadiusHover = "0px"
### boxes
,boxBackColor = "#FFFFFF"
,boxBorderRadius = "5"
,boxShadowSize = "none"
,boxShadowColor = ""
,boxTitleSize = "18"
,boxDefaultColor = "#E1E1E1"
,boxPrimaryColor = "#5F9BD5"
,boxInfoColor = "#B4B4B4"
,boxSuccessColor = "#70AD47"
,boxWarningColor = "#ED7D31"
,boxDangerColor = "#E84C22"
,tabBoxTabColor = "#F8F8F8"
,tabBoxTabTextSize = "14"
,tabBoxTabTextColor = "#646464"
,tabBoxTabTextColorSelected = "#2D2D2D"
,tabBoxBackColor = "#F8F8F8"
,tabBoxHighlightColor = "#C8C8C8"
,tabBoxBorderRadius = "5"
### inputs
,buttonBackColor = "#E2D2FA"
,buttonTextColor = "#2D2D2D"
,buttonBorderColor = "#FFFFFF"
,buttonBorderRadius = "9"
,buttonBackColorHover = "#BEBEBE"
,buttonTextColorHover = "#000000"
,buttonBorderColorHover = "#969696"
,textboxBackColor = "#FFFFFF"
,textboxBorderColor = "#FFFFFF"
,textboxBorderRadius = "9"
,textboxBackColorSelect = "#F5F5F5"
,textboxBorderColorSelect = "#6C6C6C"
### tables
,tableBackColor = "#F8F8F8"
,tableBorderColor = "#EEEEEE"
,tableBorderTopSize = "5"
,tableBorderRowSize = "4"
)
content_phil <- paste(sep = "<br/>",
"<b><a href='https://vargasmuseum.wordpress.com'>JB Vargas Museum</a></b>",
"Museum Collection: 59"
)
runApp('Desktop/app')
art %>%
count(indentations_painting_support, collection) %>%
hchart("column", stacking = "normal",
hcaes(x = indentations_painting_support, y = n, group = collection)) %>%
hc_xAxis(title = list(text = "Indentation"),
categories = c("No", "Yes")) %>%
hc_yAxis(title = list(text = "Number of Paintings")) %>%
hc_title(text = "Painting Support Indentation")
runApp('Desktop/app')
art
art
runApp('Desktop/app')
runApp('Desktop/app')
runApp('Desktop/app')
runApp('Desktop/app')
runApp('Desktop/app')
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(ICSNP))
data(pulmonary)
plot(pulmonary)
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
qqnorm(maha_dist)
qqline(maha_dist, "red")
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
qqnorm(maha_dist)
qqline(maha_dist, col = "red")
sq_m_dist <- mahalanobis(pulmonary, center=colMeans(pulmonary), cov(pulmonary))
sq_m_dist
help(qqnorm)
qqnorm(sq_m_dist)
sq_m_dist_centered <- (sq_m_dist - mean(sq_m_dist))/sqrt(var(sq_m_dist))
sq_m_dist <- mahalanobis(pulmonary, center=colMeans(pulmonary), cov(pulmonary))
qqnorm(sq_m_dist)
sq_m_dist_centered <- (sq_m_dist - mean(sq_m_dist))/sqrt(var(sq_m_dist))
sq_m_dist <- mahalanobis(pulmonary, center=colMeans(pulmonary), cov(pulmonary))
sq_m_dist_centered <- (sq_m_dist - mean(sq_m_dist))/sqrt(var(sq_m_dist))
qqnorm(sq_m_dist_centered)
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
pchisq(maha_dist, 3)
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
qnorm(pchisq(maha_dist, 3))
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
qnorm(pchisq(maha_dist, 3))
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
normal <- qnorm(pchisq(maha_dist, 3, lower.tail = F))
qqnorm(normal)
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
normal <- qnorm(pchisq(maha_dist, 3))
qqnorm(normal)
maha_dist <- mahalanobis(x = pulmonary, center = colMeans(pulmonary), cov(pulmonary))
normal <- qnorm(pchisq(maha_dist, 3))
qqnorm(normal)
qqline(normal, col = 'red')
runApp('Desktop/app')
setwd("~/Documents/GitHub/MAST90138-Multivariate-Statistics")
setwd("~/Documents/GitHub/MAST90138-Multivariate-Statistics/Assignment 1")
knitr::opts_chunk$set(echo = TRUE)
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing dimension
dim(X)
# printing wheat variety vector
(wheat_variety <- X[, 8])
# printing the first five rows of data matrix X
(X <- as.matrix(X[, c(1,2,3,4,5,6,7)]))
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing wheat variety vector
(wheat_variety <- X[, 8])
# printing the first five rows of data matrix X
head(X <- as.matrix(X[, c(1,2,3,4,5,6,7)]), 10)
# printing the dimension of X
dim(X)
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing wheat variety vector
(wheat_variety <- X[, 8])
# printing the first ten rows of data matrix X
head(X <- as.matrix(X[, c(1,2,3,4,5,6,7)]), 10)
# printing the dimension of X
dim(X)
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing wheat variety vector
(wheat_variety <- X[, 8])
# printing the data matrix X
head(X <- as.matrix(X[, c(1,2,3,4,5,6,7)]), 10)
# printing the dimension of X
dim(X)
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing wheat variety vector
(wheat_variety <- X[, 8])
# printing the data matrix X
(X <- as.matrix(X[, c(1,2,3,4,5,6,7)])
# printing the dimension of X
dim(X)
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing wheat variety vector
(wheat_variety <- X[, 8])
# printing the data matrix X
(X <- as.matrix(X[, c(1,2,3,4,5,6,7)]))
# printing the dimension of X
dim(X)
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing wheat variety vector
(wheat_variety <- X[, 8])
# printing the data matrix X
(X <- as.matrix(X[, -c(8)]))
# printing the dimension of X
dim(X)
X <- read.csv("Wheat data.txt", sep = "", header = F)
# printing wheat variety vector
(wheat_variety <- X[, 8])
X <- as.matrix(X[, -c(8)])
# printing the dimension of X
dim(X)
# printing the data matrix X
X
suppressMessages(library(ICSNP))
data(pulmonary)
plot(pulmonary)
shiny::runApp('~/Desktop/app')
